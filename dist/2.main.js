(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{143:function(n,e,t){var a=t(133),i=t(145);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var o={insert:"head",singleton:!1},s=(a(i,o),i.locals?i.locals:{});n.exports=s},144:function(n,e,t){"use strict";var a=t(143);t.n(a).a},145:function(n,e,t){(e=t(134)(!1)).push([n.i,'\nul[data-v-68781400] {\n    margin: 0;\n    padding: 0;\n}\na[data-v-68781400] {\n    padding: 15px;\n    margin: 0;\n    flex-basis: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    font-family: "Monaco", Helvetica, sans-serif;\n    color: white;\n    text-decoration: none;\n    text-transform: uppercase;\n}\n\n',""]),n.exports=e},146:function(n,e,t){var a=t(133),i=t(150);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var o={insert:"head",singleton:!1},s=(a(i,o),i.locals?i.locals:{});n.exports=s},148:function(n,e,t){"use strict";var a=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"nav-wrapper",attrs:{id:"navBar"}},[t("nav",[t("ul",[t("router-link",{attrs:{to:"/",exact:""}},[n._v("Home")]),n._v(" "),t("router-link",{attrs:{to:"/about",exact:""}},[n._v("About")]),n._v(" "),t("a",{attrs:{href:"https://github.com/jesscosio"}},[n._v("Github")]),n._v(" "),t("a",{attrs:{href:"https://www.linkedin.com/in/jesscosio/"}},[n._v("LinkedIn")]),n._v(" "),t("a",{attrs:{href:"https://www.calpoly.edu/"}},[n._v("CalPoly- SLO")])],1)])])};a._withStripped=!0;var i={name:"NavBar"},o=(t(144),t(5)),s=Object(o.a)(i,a,[],!1,null,"68781400",null);s.options.__file="src/components/navBar.vue";e.a=s.exports},149:function(n,e,t){"use strict";var a=t(146);t.n(a).a},150:function(n,e,t){(e=t(134)(!1)).push([n.i,"\n#homeImg[data-v-b3eea556] {\n        height: 100%;\n        opacity: 80%;\n        background-size: cover;\n        background-repeat: no-repeat;\n}\n#HomePage[data-v-b3eea556] {\n    position: fixed;\n    height: 100vh;\n    width: 100vw;\n}\n#HomePage[data-v-b3eea556] nav {\n        position: absolute;\n        top: 0;\n        text-align: center;\n        width: 100%;\n}\n#HomePage[data-v-b3eea556] ul {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n}\n\n",""]),n.exports=e},157:function(n,e,t){"use strict";t.r(e);var a=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{attrs:{id:"HomePage"}},[e("img",{attrs:{id:"homeImg"}}),this._v(" "),e("navBar")],1)};a._withStripped=!0;var i=t(148),o={name:"HomePage",components:{navBar:i.a},data:function(){return{windowWidth:window.innerWidth}},created:function(){window.addEventListener("resize",this.handleResize),this.loadBackground()},beforeDestroy:function(){window.removeEventListener("resize",this.handleResize),document.body.style.overflow=""},methods:{handleResize:function(){this.windowWidth=window.innerWidth,this.loadBackground()},loadBackground:function(){document.body.style.overflow="hidden",document.body.style.margin=0,(this.windowWidth>=724?t.e(3).then(t.t.bind(null,153,7)):this.windowWidth<724&&this.windowWidth>330?t.e(5).then(t.t.bind(null,154,7)):t.e(6).then(t.t.bind(null,155,7))).then((function(n){document.getElementById("homeImg").src=n.default}))}}},s=(t(149),t(5)),r=Object(s.a)(o,a,[],!1,null,"b3eea556",null);r.options.__file="src/home/HomePage.vue";e.default=r.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,