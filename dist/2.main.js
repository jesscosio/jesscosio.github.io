(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{143:function(n,e,t){var a=t(133),i=t(145);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var o={insert:"head",singleton:!1},s=(a(i,o),i.locals?i.locals:{});n.exports=s},144:function(n,e,t){"use strict";var a=t(143);t.n(a).a},145:function(n,e,t){(e=t(134)(!1)).push([n.i,'\nul[data-v-68781400] {\n    margin: 0;\n    padding: 0;\n}\na[data-v-68781400] {\n    padding: 15px;\n    margin: 0;\n    flex-basis: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    font-family: "Monaco", Helvetica, sans-serif;\n    color: white;\n    text-decoration: none;\n    text-transform: uppercase;\n}\n\n',""]),n.exports=e},146:function(n,e,t){var a=t(133),i=t(150);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var o={insert:"head",singleton:!1},s=(a(i,o),i.locals?i.locals:{});n.exports=s},148:function(n,e,t){"use strict";var a=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"nav-wrapper",attrs:{id:"navBar"}},[t("nav",[t("ul",[t("router-link",{attrs:{to:"/"}},[n._v("Home")]),n._v(" "),t("router-link",{attrs:{to:"/about"}},[n._v("About Me")]),n._v(" "),t("a",{attrs:{href:"https://github.com/jesscosio"}},[n._v("Github")]),n._v(" "),t("a",{attrs:{href:"https://www.linkedin.com/in/jesscosio/"}},[n._v("LinkedIn")]),n._v(" "),t("a",{attrs:{href:"https://www.calpoly.edu/"}},[n._v("CalPoly- SLO")])],1)])])};a._withStripped=!0;var i={name:"NavBar"},o=(t(144),t(5)),s=Object(o.a)(i,a,[],!1,null,"68781400",null);s.options.__file="src/components/navBar.vue";e.a=s.exports},149:function(n,e,t){"use strict";var a=t(146);t.n(a).a},150:function(n,e,t){(e=t(134)(!1)).push([n.i,"\n#homeImg[data-v-b3eea556] {\n        height: 100%;\n        opacity: 80%;\n        background-size: cover;\n        background-repeat: no-repeat;\n}\n#HomePage[data-v-b3eea556] {\n    position: fixed;\n    height: 100vh;\n    width: 100vw;\n}\n#HomePage[data-v-b3eea556] nav {\n        position: absolute;\n        top: 0;\n        text-align: center;\n        width: 100%;\n}\n#HomePage[data-v-b3eea556] ul {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n}\n\n",""]),n.exports=e},158:function(n,e,t){"use strict";t.r(e);var a=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{attrs:{id:"HomePage"}},[e("img",{attrs:{id:"homeImg"}}),this._v(" "),e("navBar")],1)};a._withStripped=!0;var i=t(148),o={name:"HomePage",components:{navBar:i.a},data:function(){return{windowWidth:window.innerWidth}},created:function(){window.addEventListener("resize",this.handleResize),this.loadBackground()},beforeDestroy:function(){window.removeEventListener("resize",this.handleResize),document.body.style.overflow=""},methods:{handleResize:function(){this.windowWidth=window.innerWidth,this.loadBackground()},loadBackground:function(){document.body.style.overflow="hidden",(this.windowWidth>=724?t.e(3).then(t.t.bind(null,153,7)):this.windowWidth<724&&this.windowWidth>330?t.e(5).then(t.t.bind(null,154,7)):t.e(6).then(t.t.bind(null,155,7))).then((function(n){console.log(n.default),document.getElementById("homeImg").src=n.default}))}}},s=(t(149),t(5)),r=Object(s.a)(o,a,[],!1,null,"b3eea556",null);r.options.__file="src/home/HomePage.vue";e.default=r.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9uYXZCYXIudnVlPzc4YWYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbmF2QmFyLnZ1ZT85MWYyIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL25hdkJhci52dWU/ZTJhOCIsIndlYnBhY2s6Ly8vLi9zcmMvaG9tZS9Ib21lUGFnZS52dWU/ZTJjYyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9uYXZCYXIudnVlPzIxN2UiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL25hdkJhci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbmF2QmFyLnZ1ZT83OTM2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL25hdkJhci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hvbWUvSG9tZVBhZ2UudnVlPzJmMTQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hvbWUvSG9tZVBhZ2UudnVlP2YyOWEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hvbWUvSG9tZVBhZ2UudnVlPzFiMjIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hvbWUvSG9tZVBhZ2UudnVlPzc2MzIiLCJ3ZWJwYWNrOi8vL3NyYy9ob21lL0hvbWVQYWdlLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvaG9tZS9Ib21lUGFnZS52dWUiXSwibmFtZXMiOlsiYXBpIiwiY29udGVudCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwibW9kdWxlIiwiaSIsIm9wdGlvbnMiLCJleHBvcnRlZCIsImxvY2FscyIsImV4cG9ydHMiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJwdXNoIiwicmVuZGVyIiwiX3ZtIiwidGhpcyIsIl9oIiwiJGNyZWF0ZUVsZW1lbnQiLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJhdHRycyIsImlkIiwidG8iLCJfdiIsImhyZWYiLCJfd2l0aFN0cmlwcGVkIiwiY29tcG9uZW50IiwiX19maWxlIl0sIm1hcHBp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QUNNLFNBQU4sOEJBR0Esa0JBOUJBLElBK0JBLGtDQUNBLGlCQWhDQSxLQWdDQSxpQkEvQkEsSUFnQ0Esa0NBRUEsbUNBR0Esa0JBQ1EsUUFBUixlQUNRLFNBQVIsOEMsZ0JDM0NJQyxFQUFZLFlBQ2QsRUFDQWQsRUhDb0IsSUdDcEIsRUFDQSxLQUNBLFdBQ0EsTUF1QkZjLEVBQVVwQixRQUFRcUIsT0FBUyx3QkFDWixVQUFBRCxFIiwiZmlsZSI6IjIubWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbmF2QmFyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTY4NzgxNDAwJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbmF2QmFyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTY4NzgxNDAwJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbmF2QmFyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTY4NzgxNDAwJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlxcbnVsW2RhdGEtdi02ODc4MTQwMF0ge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcbmFbZGF0YS12LTY4NzgxNDAwXSB7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZmxleC1iYXNpczogMTAwJTtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbiAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICBmb250LWZhbWlseTogXFxcIk1vbmFjb1xcXCIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxufVxcblxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hvbWVQYWdlLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWIzZWVhNTU2JnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwibmF2LXdyYXBwZXJcIiwgYXR0cnM6IHsgaWQ6IFwibmF2QmFyXCIgfSB9LCBbXG4gICAgX2MoXCJuYXZcIiwgW1xuICAgICAgX2MoXG4gICAgICAgIFwidWxcIixcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFwicm91dGVyLWxpbmtcIiwgeyBhdHRyczogeyB0bzogXCIvXCIgfSB9LCBbX3ZtLl92KFwiSG9tZVwiKV0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXCJyb3V0ZXItbGlua1wiLCB7IGF0dHJzOiB7IHRvOiBcIi9hYm91dFwiIH0gfSwgW192bS5fdihcIkFib3V0IE1lXCIpXSksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcImFcIiwgeyBhdHRyczogeyBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9qZXNzY29zaW9cIiB9IH0sIFtcbiAgICAgICAgICAgIF92bS5fdihcIkdpdGh1YlwiKVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogXCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVzc2Nvc2lvL1wiIH0gfSxcbiAgICAgICAgICAgIFtfdm0uX3YoXCJMaW5rZWRJblwiKV1cbiAgICAgICAgICApLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXCJhXCIsIHsgYXR0cnM6IHsgaHJlZjogXCJodHRwczovL3d3dy5jYWxwb2x5LmVkdS9cIiB9IH0sIFtcbiAgICAgICAgICAgIF92bS5fdihcIkNhbFBvbHktIFNMT1wiKVxuICAgICAgICAgIF0pXG4gICAgICAgIF0sXG4gICAgICAgIDFcbiAgICAgIClcbiAgICBdKVxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cbiAgICA8ZGl2IGlkPVwibmF2QmFyXCIgY2xhc3M9J25hdi13cmFwcGVyJz5cbiAgICAgICAgPG5hdj5cbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgdG89XCIvXCI+SG9tZTwvcm91dGVyLWxpbms+XG4gICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHRvPVwiL2Fib3V0XCI+QWJvdXQgTWU8L3JvdXRlci1saW5rPlxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vamVzc2Nvc2lvXCI+R2l0aHViPC9hPlxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVzc2Nvc2lvL1wiPkxpbmtlZEluPC9hPlxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5jYWxwb2x5LmVkdS9cIj5DYWxQb2x5LSBTTE88L2E+XG5cbiAgICAgICAgICAgICAgICA8IS0tIDxyb3V0ZXItbGluayB0bz1cIi9sYW5ndWFnZXNcIj5MYW5ndWFnZXM8L3JvdXRlci1saW5rPiAtLT5cbiAgICAgICAgICAgICAgICA8IS0tIDxyb3V0ZXItbGluayB0bz1cIi9wb2tlbW9uXCI+UG9rZW1vbjwvcm91dGVyLWxpbms+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHRvPVwiL2hvYmJpZXNcIj5Ib2JiaWVzPC9yb3V0ZXItbGluaz5cbiAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgdG89XCIvYmxvZ1wiPkJsb2c8L3JvdXRlci1saW5rPiAtLT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvbmF2PlxuICAgICAgICAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiBcIk5hdkJhclwiXG4gXG59XG48L3NjcmlwdD5cblxuPHN0eWxlIHNjb3BlZD5cbiAgICB1bCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gICAgYSB7XG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LWZhbWlseTogXCJNb25hY29cIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB9XG4gICAgXG48L3N0eWxlPiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdkJhci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdkJhci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL25hdkJhci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Njg3ODE0MDAmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vbmF2QmFyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vbmF2QmFyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9uYXZCYXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9Njg3ODE0MDAmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjY4NzgxNDAwXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL2plc3MvRGVza3RvcC9wcm9qZWN0cy93ZWIvamVzc2Nvc2lvLmlvL2plc3Njb3Npby5naXRodWIuaW8vbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNjg3ODE0MDAnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNjg3ODE0MDAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNjg3ODE0MDAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL25hdkJhci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Njg3ODE0MDAmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNjg3ODE0MDAnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9jb21wb25lbnRzL25hdkJhci52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSG9tZVBhZ2UudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9YjNlZWE1NTYmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lUGFnZS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1iM2VlYTU1NiZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIiIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG4jaG9tZUltZ1tkYXRhLXYtYjNlZWE1NTZdIHtcXG4gICAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICAgIG9wYWNpdHk6IDgwJTtcXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbn1cXG4jSG9tZVBhZ2VbZGF0YS12LWIzZWVhNTU2XSB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbn1cXG4jSG9tZVBhZ2VbZGF0YS12LWIzZWVhNTU2XSBuYXYge1xcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgdG9wOiAwO1xcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxufVxcbiNIb21lUGFnZVtkYXRhLXYtYjNlZWE1NTZdIHVsIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICB7IGF0dHJzOiB7IGlkOiBcIkhvbWVQYWdlXCIgfSB9LFxuICAgIFtfYyhcImltZ1wiLCB7IGF0dHJzOiB7IGlkOiBcImhvbWVJbWdcIiB9IH0pLCBfdm0uX3YoXCIgXCIpLCBfYyhcIm5hdkJhclwiKV0sXG4gICAgMVxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0wIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSG9tZVBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTAhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ib21lUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGU+XG48ZGl2IGlkPVwiSG9tZVBhZ2VcIj5cbiAgICA8aW1nIGlkPSdob21lSW1nJy8+XG4gICAgPG5hdkJhciAvPlxuPC9kaXY+XG4gICAgXG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IG5hdkJhciBmcm9tICcuLi9jb21wb25lbnRzL25hdkJhci52dWUnO1xuXG5jb25zdCBsYXJnZVNjcmVlbiA9IDcyNDtcbmNvbnN0IHNtYWxsU2NyZWVuID0gMzMwO1xuXG5jb25zdCBIb21lUGFnZSA9IHtcbiAgICBuYW1lOiAnSG9tZVBhZ2UnLFxuICAgIGNvbXBvbmVudHM6IHtuYXZCYXJ9LFxuICAgIGRhdGEgOiBmdW5jdGlvbigpe1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2luZG93V2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgIH0sXG4gICAgY3JlYXRlZCgpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuaGFuZGxlUmVzaXplKTtcbiAgICAgICAgdGhpcy5sb2FkQmFja2dyb3VuZCgpO1xuICAgIH0sXG4gICAgYmVmb3JlRGVzdHJveSgpIHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuaGFuZGxlUmVzaXplKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IFwiXCI7IC8vIC0tIHNob3VsZCByZXNldCBtb2RpZmllZCBib2R5IC0tIFxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgICBoYW5kbGVSZXNpemU6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICB0aGlzLndpbmRvd1dpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICAgICAgICB0aGlzLmxvYWRCYWNrZ3JvdW5kKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGxvYWRCYWNrZ3JvdW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuICAgICAgICAgICAgbGV0IGltZztcblxuICAgICAgICAgICAgaWYodGhpcy53aW5kb3dXaWR0aCA+PSBsYXJnZVNjcmVlbikge1xuICAgICAgICAgICAgICAgIGltZyA9ICBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJsYXJnZUltYWdlXCIgKi8gXCIuLi9hc3NldHMvbW93Z2xpLWxyZy5qcGdcIik7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMud2luZG93V2lkdGggPCBsYXJnZVNjcmVlbiAmJiB0aGlzLndpbmRvd1dpZHRoID4gc21hbGxTY3JlZW4pIHtcbiAgICAgICAgICAgICAgICBpbWcgPSAgaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwibWVkSW1hZ2VcIiAqLyBcIi4uL2Fzc2V0cy93cm9uZ3dheS1tZWQuanBnXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWcgPSAgaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwic21hbGxJbWFnZVwiICovIFwiLi4vYXNzZXRzL3N0b21wLmpwZ1wiKTtcbiAgICAgICAgICAgIH0gICAgICBcblxuICAgICAgICAgICAgaW1nLnRoZW4oKGRhdGEpPT57XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kZWZhdWx0KTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhvbWVJbWdcIikuc3JjID0gZGF0YS5kZWZhdWx0O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59OyBcbmV4cG9ydCBkZWZhdWx0IEhvbWVQYWdlO1xuPC9zY3JpcHQ+ICBcblxuPHN0eWxlIHNjb3BlZD5cblxuI2hvbWVJbWcge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9wYWNpdHk6IDgwJTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbiNIb21lUGFnZSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIFxufVxuXG4gICAgI0hvbWVQYWdlIC9kZWVwLyBuYXYge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gICAgI0hvbWVQYWdlIC9kZWVwLyB1bCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuXG48L3N0eWxlPlxuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9Ib21lUGFnZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YjNlZWE1NTYmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vSG9tZVBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9Ib21lUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vSG9tZVBhZ2UudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9YjNlZWE1NTYmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcImIzZWVhNTU2XCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL2plc3MvRGVza3RvcC9wcm9qZWN0cy93ZWIvamVzc2Nvc2lvLmlvL2plc3Njb3Npby5naXRodWIuaW8vbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnYjNlZWE1NTYnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnYjNlZWE1NTYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnYjNlZWE1NTYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL0hvbWVQYWdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1iM2VlYTU1NiZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdiM2VlYTU1NicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL2hvbWUvSG9tZVBhZ2UudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==