(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{143:function(e,n,t){var a=t(133),o=t(145);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},s=(a(o,i),o.locals?o.locals:{});e.exports=s},144:function(e,n,t){"use strict";var a=t(143);t.n(a).a},145:function(e,n,t){(n=t(134)(!1)).push([e.i,'\nul[data-v-68781400] {\n    margin: 0;\n    padding: 0;\n}\na[data-v-68781400] {\n    padding: 15px;\n    margin: 0;\n    flex-basis: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    font-family: "Monaco", Helvetica, sans-serif;\n    color: white;\n    text-decoration: none;\n    text-transform: uppercase;\n}\n\n',""]),e.exports=n},147:function(e,n,t){var a=t(133),o=t(152);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},s=(a(o,i),o.locals?o.locals:{});e.exports=s},148:function(e,n,t){"use strict";var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"nav-wrapper",attrs:{id:"navBar"}},[t("nav",[t("ul",[t("router-link",{attrs:{to:"/"}},[e._v("Home")]),e._v(" "),t("router-link",{attrs:{to:"/about"}},[e._v("About Me")]),e._v(" "),t("a",{attrs:{href:"https://github.com/jesscosio"}},[e._v("Github")]),e._v(" "),t("a",{attrs:{href:"https://www.linkedin.com/in/jesscosio/"}},[e._v("LinkedIn")]),e._v(" "),t("a",{attrs:{href:"https://www.calpoly.edu/"}},[e._v("CalPoly- SLO")])],1)])])};a._withStripped=!0;var o={name:"NavBar"},i=(t(144),t(5)),s=Object(i.a)(o,a,[],!1,null,"68781400",null);s.options.__file="src/components/navBar.vue";n.a=s.exports},151:function(e,n,t){"use strict";var a=t(147);t.n(a).a},152:function(e,n,t){(n=t(134)(!1)).push([e.i,"\n.bio[data-v-b392c64c] {\n    font-size: 14px;\n    font-weight: 400;\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\nimg[data-v-b392c64c] {\n    float: right;\n    max-height: 250px;\n    display: inline;\n}\n#about[data-v-b392c64c] a {\n   color: black;\n}\n\n",""]),e.exports=n},157:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this.$createElement,n=this._self._c||e;return n("div",{attrs:{id:"about"}},[n("navBar"),this._v(" "),n("img",{attrs:{id:"aboutImg","data-src":"../assets/heraldsquare.jpg",alt:"heraldsquare"}}),this._v(" "),this._m(0)],1)};a._withStripped=!0;var o={name:"AboutMe",components:{navBar:t(148).a},mounted:function(){t.e(1).then(t.t.bind(null,156,7)).then((function(e){console.log(e.default),document.getElementById("aboutImg").src=e.default}))}},i=(t(151),t(5)),s=Object(i.a)(o,a,[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("span",{staticClass:"bio"},[t("p",[e._v("Contact • EMAIL : jessica.cosio@icloud.com • MOBILE : (805) 865-6148 \n            ")]),t("p",[e._v("EDUCATION • CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO, CA B.S. Software Engineering")]),e._v(" "),t("p",[e._v("EXPERIENCE• MACY’S INC. Software Engineer")]),e._v(" "),t("p",[e._v("\n                Winter 2015\nSAN FRANCISCO, CA\nAug 2015 - Present\no Full stack web development – Javascript, Node, Backbone, HTML, CSS/SCSS, responsive, Angular, Java, Jboss, Maven\no A/B testing and KPI tracking through web analytics implementations\no Analytics using IBM coremetrics\no High priority/urgent code delivery and defect fixes\no Unit test coverage and performance test base lining behind delivered features o Strong emphasis on process and delivery- especially using lean principles\no Web app marketing research - emphasis on privacy and UX implications o Daily documentation of work as a steady habit\no Weekly showcase of work to business stakeholders\n            ")]),e._v(" "),t("p",[e._v("Tech Star Executive Development Program Aug 2015 – Jan 2016\no Balanced platform development with human resources managed training sessions\no Delivered monthly showcase to program stakeholders, managers, and colleagues\no Mobile Platform and Content Engineering- creation of common components for web developers, executed library updates")]),e._v(" "),t("p",[e._v("• AUTOLIV – NIGHT VISION Goleta, CA\nSoftware Intern June 2015-Aug 2015\no Insured validity of gain calibration testing software used for night vision cameras o Created test documentation for verification of calibration software\no Developed small script for one off need from EE lab\nPROJECTS\n• MACY’S VOICE LAB: Researched and developed voice applications for Google Home and Alexa platforms utilizing Google Cloud and AWS Lambda. Assisted with architecting a single codebase and creating module components.\n• SHOPPABLE CONTENT LEAN LAB : Responsible for running experiments and studying behavior of Macy’s customers on the responsive website to gain insight on producing\nvaluable content recommendations.\n• MOBILE WEB INNOVATION LEAN LAB : Responsible for running front-end experiments and studying the behavior of our mobile web customers to gain insight into providing an enhanced mobile shopping experience. Utilized A/B testing techniques and worked under principles of Fast, Clean, and Modern.\n• GOOGLE AMP HACKATHON, NYC 2018: Macy’s homepage written in AMP.\n• MACY’S HACKATHON TOP 5 CONTESTANT, 2017: Thumbs up! implemented a tap and zoom capability on the mobile website’s browse and search pages for viewing a high resolution image\nof the product.\n• MACY’S IDEA LAB, MEN’ S WEARHOUSE ONLINE TUXEDO RENTAL PROJECT: Assisted in the “crawl” phase of a new partnership with Men’s Wearhouse that would ease the rental process for groups including the process for sizing and ordering.\n• MOBILE WEB PLATFORM : Developed code and took ownership alongside a veteran team for optimizing the Macy's website for mobile/tablet devices. ")])])}],!1,null,"b392c64c",null);s.options.__file="src/about/AboutMe.vue";n.default=s.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9uYXZCYXIudnVlPzc4YWYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbmF2QmFyLnZ1ZT85MWYyIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL25hdkJhci52dWU/ZTJhOCIsIndlYnBhY2s6Ly8vLi9zcmMvYWJvdXQvQWJvdXRNZS52dWU/OTE5YiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9uYXZCYXIudnVlPzIxN2UiLCJ3ZWJwYWNrOi8vL3NyYy9jb21wb25lbnRzL25hdkJhci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbmF2QmFyLnZ1ZT83OTM2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL25hdkJhci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fib3V0L0Fib3V0TWUudnVlPzg2MDgiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fib3V0L0Fib3V0TWUudnVlP2JkNTAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fib3V0L0Fib3V0TWUudnVlPzVjNjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fib3V0L0Fib3V0TWUudnVlP2QxZWYiLCJ3ZWJwYWNrOi8vL3NyYy9hYm91dC9BYm91dE1lLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvYWJvdXQvQWJvdXRNZS52dWUiXSwibmFtZXMiOlsiYXBpIiwiY29udGVudCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwibW9kdWxlIiwiaSIsIm9wdGlvbnMiLCJleHBvcnRlZCIsImxvY2FscyIsImV4cG9ydHMiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJwdXNoIiwicmVuZGVyIiwiX3ZtIiwidGhpcyIsIl9oIiwiJGNyZWF0ZUVsZW1lbnQiLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJhdHRycyIsImlkIiwidG8iLCJfdiIsImhyZWYiLCJfd2l0aFN0cmlwcGVkIiwiY29tcG9uZW50IiwiX19maWxlIiwiYWx0Iiwi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Q0FDcEIsV0FDRSxJQUFJQyxFQUFNQyxLQUNOQyxFQUFLRixFQUFJRyxlQUNUQyxFQUFLSixFQUFJSyxNQUFNRCxJQUFNRixFQUN6QixPQUFPRSxFQUFHLE9BQVEsQ0FBRUUsWUFBYSxPQUFTLENBQ3hDRixFQUFHLElBQUssQ0FDTkosRUFBSVUsR0FDRix5RkFHSk4sRUFBRyxJQUFLLENBQ05KLEVBQUlVLEdBQ0YsdUdBR0pWLEVBQUlVLEdBQUcsS0FDUE4sRUFBRyxJQUFLLENBQUNKLEVBQUlVLEdBQUcsK0NBQ2hCVixFQUFJVSxHQUFHLEtBQ1BOLEVBQUcsSUFBSyxDQUNOSixFQUFJVSxHQUNGLHFyQkFHSlYsRUFBSVUsR0FBRyxLQUNQTixFQUFHLElBQUssQ0FDTkosRUFBSVUsR0FDRix3VkFHSlYsRUFBSVUsR0FBRyxLQUNQTixFQUFHLElBQUssQ0FDTkosRUFBSVUsR0FDRix1bkRHNUNSLEVBQ0EsS0FDQSxXQUNBLE1BdUJGRyxFQUFVcEIsUUFBUXFCLE9BQVMsd0JBQ1osVUFBQUQsRSIsImZpbGUiOiIwLm1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdkJhci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02ODc4MTQwMCZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdkJhci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02ODc4MTQwMCZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdkJhci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02ODc4MTQwMCZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIiIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG51bFtkYXRhLXYtNjg3ODE0MDBdIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbn1cXG5hW2RhdGEtdi02ODc4MTQwMF0ge1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJNb25hY29cXFwiLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbn1cXG5cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BYm91dE1lLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWIzOTJjNjRjJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwibmF2LXdyYXBwZXJcIiwgYXR0cnM6IHsgaWQ6IFwibmF2QmFyXCIgfSB9LCBbXG4gICAgX2MoXCJuYXZcIiwgW1xuICAgICAgX2MoXG4gICAgICAgIFwidWxcIixcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFwicm91dGVyLWxpbmtcIiwgeyBhdHRyczogeyB0bzogXCIvXCIgfSB9LCBbX3ZtLl92KFwiSG9tZVwiKV0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXCJyb3V0ZXItbGlua1wiLCB7IGF0dHJzOiB7IHRvOiBcIi9hYm91dFwiIH0gfSwgW192bS5fdihcIkFib3V0IE1lXCIpXSksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcImFcIiwgeyBhdHRyczogeyBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9qZXNzY29zaW9cIiB9IH0sIFtcbiAgICAgICAgICAgIF92bS5fdihcIkdpdGh1YlwiKVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogXCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVzc2Nvc2lvL1wiIH0gfSxcbiAgICAgICAgICAgIFtfdm0uX3YoXCJMaW5rZWRJblwiKV1cbiAgICAgICAgICApLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXCJhXCIsIHsgYXR0cnM6IHsgaHJlZjogXCJodHRwczovL3d3dy5jYWxwb2x5LmVkdS9cIiB9IH0sIFtcbiAgICAgICAgICAgIF92bS5fdihcIkNhbFBvbHktIFNMT1wiKVxuICAgICAgICAgIF0pXG4gICAgICAgIF0sXG4gICAgICAgIDFcbiAgICAgIClcbiAgICBdKVxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cbiAgICA8ZGl2IGlkPVwibmF2QmFyXCIgY2xhc3M9J25hdi13cmFwcGVyJz5cbiAgICAgICAgPG5hdj5cbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgdG89XCIvXCI+SG9tZTwvcm91dGVyLWxpbms+XG4gICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHRvPVwiL2Fib3V0XCI+QWJvdXQgTWU8L3JvdXRlci1saW5rPlxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vamVzc2Nvc2lvXCI+R2l0aHViPC9hPlxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVzc2Nvc2lvL1wiPkxpbmtlZEluPC9hPlxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5jYWxwb2x5LmVkdS9cIj5DYWxQb2x5LSBTTE88L2E+XG5cbiAgICAgICAgICAgICAgICA8IS0tIDxyb3V0ZXItbGluayB0bz1cIi9sYW5ndWFnZXNcIj5MYW5ndWFnZXM8L3JvdXRlci1saW5rPiAtLT5cbiAgICAgICAgICAgICAgICA8IS0tIDxyb3V0ZXItbGluayB0bz1cIi9wb2tlbW9uXCI+UG9rZW1vbjwvcm91dGVyLWxpbms+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHRvPVwiL2hvYmJpZXNcIj5Ib2JiaWVzPC9yb3V0ZXItbGluaz5cbiAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgdG89XCIvYmxvZ1wiPkJsb2c8L3JvdXRlci1saW5rPiAtLT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvbmF2PlxuICAgICAgICAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiBcIk5hdkJhclwiXG4gXG59XG48L3NjcmlwdD5cblxuPHN0eWxlIHNjb3BlZD5cbiAgICB1bCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gICAgYSB7XG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LWZhbWlseTogXCJNb25hY29cIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB9XG4gICAgXG48L3N0eWxlPiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdkJhci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdkJhci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL25hdkJhci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Njg3ODE0MDAmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vbmF2QmFyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vbmF2QmFyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9uYXZCYXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9Njg3ODE0MDAmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjY4NzgxNDAwXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL2plc3MvRGVza3RvcC9wcm9qZWN0cy93ZWIvamVzc2Nvc2lvLmlvL2plc3Njb3Npby5naXRodWIuaW8vbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNjg3ODE0MDAnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNjg3ODE0MDAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNjg3ODE0MDAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL25hdkJhci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Njg3ODE0MDAmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNjg3ODE0MDAnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9jb21wb25lbnRzL25hdkJhci52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQWJvdXRNZS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1iMzkyYzY0YyZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0Fib3V0TWUudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9YjM5MmM2NGMmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCIiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLmJpb1tkYXRhLXYtYjM5MmM2NGNdIHtcXG4gICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICBmb250LWZhbWlseTogJ1RyZWJ1Y2hldCBNUycsICdMdWNpZGEgU2FucyBVbmljb2RlJywgJ0x1Y2lkYSBHcmFuZGUnLCAnTHVjaWRhIFNhbnMnLCBBcmlhbCwgc2Fucy1zZXJpZjtcXG59XFxuaW1nW2RhdGEtdi1iMzkyYzY0Y10ge1xcbiAgICBmbG9hdDogcmlnaHQ7XFxuICAgIG1heC1oZWlnaHQ6IDI1MHB4O1xcbiAgICBkaXNwbGF5OiBpbmxpbmU7XFxufVxcbiNhYm91dFtkYXRhLXYtYjM5MmM2NGNdIGEge1xcbiAgIGNvbG9yOiBibGFjaztcXG59XFxuXFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICB7IGF0dHJzOiB7IGlkOiBcImFib3V0XCIgfSB9LFxuICAgIFtcbiAgICAgIF9jKFwibmF2QmFyXCIpLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwiaW1nXCIsIHtcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICBpZDogXCJhYm91dEltZ1wiLFxuICAgICAgICAgIFwiZGF0YS1zcmNcIjogXCIuLi9hc3NldHMvaGVyYWxkc3F1YXJlLmpwZ1wiLFxuICAgICAgICAgIGFsdDogXCJoZXJhbGRzcXVhcmVcIlxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfdm0uX20oMClcbiAgICBdLFxuICAgIDFcbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXCJzcGFuXCIsIHsgc3RhdGljQ2xhc3M6IFwiYmlvXCIgfSwgW1xuICAgICAgX2MoXCJwXCIsIFtcbiAgICAgICAgX3ZtLl92KFxuICAgICAgICAgIFwiQ29udGFjdCDigKIgRU1BSUwgOiBqZXNzaWNhLmNvc2lvQGljbG91ZC5jb20g4oCiIE1PQklMRSA6ICg4MDUpIDg2NS02MTQ4IFxcbiAgICAgICAgICAgIFwiXG4gICAgICAgIClcbiAgICAgIF0pLFxuICAgICAgX2MoXCJwXCIsIFtcbiAgICAgICAgX3ZtLl92KFxuICAgICAgICAgIFwiRURVQ0FUSU9OIOKAoiBDQUxJRk9STklBIFBPTFlURUNITklDIFNUQVRFIFVOSVZFUlNJVFkgU0FOIExVSVMgT0JJU1BPLCBDQSBCLlMuIFNvZnR3YXJlIEVuZ2luZWVyaW5nXCJcbiAgICAgICAgKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJwXCIsIFtfdm0uX3YoXCJFWFBFUklFTkNF4oCiIE1BQ1nigJlTIElOQy4gU29mdHdhcmUgRW5naW5lZXJcIildKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcInBcIiwgW1xuICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgV2ludGVyIDIwMTVcXG5TQU4gRlJBTkNJU0NPLCBDQVxcbkF1ZyAyMDE1IC0gUHJlc2VudFxcbm8gRnVsbCBzdGFjayB3ZWIgZGV2ZWxvcG1lbnQg4oCTIEphdmFzY3JpcHQsIE5vZGUsIEJhY2tib25lLCBIVE1MLCBDU1MvU0NTUywgcmVzcG9uc2l2ZSwgQW5ndWxhciwgSmF2YSwgSmJvc3MsIE1hdmVuXFxubyBBL0IgdGVzdGluZyBhbmQgS1BJIHRyYWNraW5nIHRocm91Z2ggd2ViIGFuYWx5dGljcyBpbXBsZW1lbnRhdGlvbnNcXG5vIEFuYWx5dGljcyB1c2luZyBJQk0gY29yZW1ldHJpY3NcXG5vIEhpZ2ggcHJpb3JpdHkvdXJnZW50IGNvZGUgZGVsaXZlcnkgYW5kIGRlZmVjdCBmaXhlc1xcbm8gVW5pdCB0ZXN0IGNvdmVyYWdlIGFuZCBwZXJmb3JtYW5jZSB0ZXN0IGJhc2UgbGluaW5nIGJlaGluZCBkZWxpdmVyZWQgZmVhdHVyZXMgbyBTdHJvbmcgZW1waGFzaXMgb24gcHJvY2VzcyBhbmQgZGVsaXZlcnktIGVzcGVjaWFsbHkgdXNpbmcgbGVhbiBwcmluY2lwbGVzXFxubyBXZWIgYXBwIG1hcmtldGluZyByZXNlYXJjaCAtIGVtcGhhc2lzIG9uIHByaXZhY3kgYW5kIFVYIGltcGxpY2F0aW9ucyBvIERhaWx5IGRvY3VtZW50YXRpb24gb2Ygd29yayBhcyBhIHN0ZWFkeSBoYWJpdFxcbm8gV2Vla2x5IHNob3djYXNlIG9mIHdvcmsgdG8gYnVzaW5lc3Mgc3Rha2Vob2xkZXJzXFxuICAgICAgICAgICAgXCJcbiAgICAgICAgKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJwXCIsIFtcbiAgICAgICAgX3ZtLl92KFxuICAgICAgICAgIFwiVGVjaCBTdGFyIEV4ZWN1dGl2ZSBEZXZlbG9wbWVudCBQcm9ncmFtIEF1ZyAyMDE1IOKAkyBKYW4gMjAxNlxcbm8gQmFsYW5jZWQgcGxhdGZvcm0gZGV2ZWxvcG1lbnQgd2l0aCBodW1hbiByZXNvdXJjZXMgbWFuYWdlZCB0cmFpbmluZyBzZXNzaW9uc1xcbm8gRGVsaXZlcmVkIG1vbnRobHkgc2hvd2Nhc2UgdG8gcHJvZ3JhbSBzdGFrZWhvbGRlcnMsIG1hbmFnZXJzLCBhbmQgY29sbGVhZ3Vlc1xcbm8gTW9iaWxlIFBsYXRmb3JtIGFuZCBDb250ZW50IEVuZ2luZWVyaW5nLSBjcmVhdGlvbiBvZiBjb21tb24gY29tcG9uZW50cyBmb3Igd2ViIGRldmVsb3BlcnMsIGV4ZWN1dGVkIGxpYnJhcnkgdXBkYXRlc1wiXG4gICAgICAgIClcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwicFwiLCBbXG4gICAgICAgIF92bS5fdihcbiAgICAgICAgICBcIuKAoiBBVVRPTElWIOKAkyBOSUdIVCBWSVNJT04gR29sZXRhLCBDQVxcblNvZnR3YXJlIEludGVybiBKdW5lIDIwMTUtQXVnIDIwMTVcXG5vIEluc3VyZWQgdmFsaWRpdHkgb2YgZ2FpbiBjYWxpYnJhdGlvbiB0ZXN0aW5nIHNvZnR3YXJlIHVzZWQgZm9yIG5pZ2h0IHZpc2lvbiBjYW1lcmFzIG8gQ3JlYXRlZCB0ZXN0IGRvY3VtZW50YXRpb24gZm9yIHZlcmlmaWNhdGlvbiBvZiBjYWxpYnJhdGlvbiBzb2Z0d2FyZVxcbm8gRGV2ZWxvcGVkIHNtYWxsIHNjcmlwdCBmb3Igb25lIG9mZiBuZWVkIGZyb20gRUUgbGFiXFxuUFJPSkVDVFNcXG7igKIgTUFDWeKAmVMgVk9JQ0UgTEFCOiBSZXNlYXJjaGVkIGFuZCBkZXZlbG9wZWQgdm9pY2UgYXBwbGljYXRpb25zIGZvciBHb29nbGUgSG9tZSBhbmQgQWxleGEgcGxhdGZvcm1zIHV0aWxpemluZyBHb29nbGUgQ2xvdWQgYW5kIEFXUyBMYW1iZGEuIEFzc2lzdGVkIHdpdGggYXJjaGl0ZWN0aW5nIGEgc2luZ2xlIGNvZGViYXNlIGFuZCBjcmVhdGluZyBtb2R1bGUgY29tcG9uZW50cy5cXG7igKIgU0hPUFBBQkxFIENPTlRFTlQgTEVBTiBMQUIgOiBSZXNwb25zaWJsZSBmb3IgcnVubmluZyBleHBlcmltZW50cyBhbmQgc3R1ZHlpbmcgYmVoYXZpb3Igb2YgTWFjeeKAmXMgY3VzdG9tZXJzIG9uIHRoZSByZXNwb25zaXZlIHdlYnNpdGUgdG8gZ2FpbiBpbnNpZ2h0IG9uIHByb2R1Y2luZ1xcbnZhbHVhYmxlIGNvbnRlbnQgcmVjb21tZW5kYXRpb25zLlxcbuKAoiBNT0JJTEUgV0VCIElOTk9WQVRJT04gTEVBTiBMQUIgOiBSZXNwb25zaWJsZSBmb3IgcnVubmluZyBmcm9udC1lbmQgZXhwZXJpbWVudHMgYW5kIHN0dWR5aW5nIHRoZSBiZWhhdmlvciBvZiBvdXIgbW9iaWxlIHdlYiBjdXN0b21lcnMgdG8gZ2FpbiBpbnNpZ2h0IGludG8gcHJvdmlkaW5nIGFuIGVuaGFuY2VkIG1vYmlsZSBzaG9wcGluZyBleHBlcmllbmNlLiBVdGlsaXplZCBBL0IgdGVzdGluZyB0ZWNobmlxdWVzIGFuZCB3b3JrZWQgdW5kZXIgcHJpbmNpcGxlcyBvZiBGYXN0LCBDbGVhbiwgYW5kIE1vZGVybi5cXG7igKIgR09PR0xFIEFNUCBIQUNLQVRIT04sIE5ZQyAyMDE4OiBNYWN54oCZcyBob21lcGFnZSB3cml0dGVuIGluIEFNUC5cXG7igKIgTUFDWeKAmVMgSEFDS0FUSE9OIFRPUCA1IENPTlRFU1RBTlQsIDIwMTc6IFRodW1icyB1cCEgaW1wbGVtZW50ZWQgYSB0YXAgYW5kIHpvb20gY2FwYWJpbGl0eSBvbiB0aGUgbW9iaWxlIHdlYnNpdGXigJlzIGJyb3dzZSBhbmQgc2VhcmNoIHBhZ2VzIGZvciB2aWV3aW5nIGEgaGlnaCByZXNvbHV0aW9uIGltYWdlXFxub2YgdGhlIHByb2R1Y3QuXFxu4oCiIE1BQ1nigJlTIElERUEgTEFCLCBNRU7igJkgUyBXRUFSSE9VU0UgT05MSU5FIFRVWEVETyBSRU5UQUwgUFJPSkVDVDogQXNzaXN0ZWQgaW4gdGhlIOKAnGNyYXds4oCdIHBoYXNlIG9mIGEgbmV3IHBhcnRuZXJzaGlwIHdpdGggTWVu4oCZcyBXZWFyaG91c2UgdGhhdCB3b3VsZCBlYXNlIHRoZSByZW50YWwgcHJvY2VzcyBmb3IgZ3JvdXBzIGluY2x1ZGluZyB0aGUgcHJvY2VzcyBmb3Igc2l6aW5nIGFuZCBvcmRlcmluZy5cXG7igKIgTU9CSUxFIFdFQiBQTEFURk9STSA6IERldmVsb3BlZCBjb2RlIGFuZCB0b29rIG93bmVyc2hpcCBhbG9uZ3NpZGUgYSB2ZXRlcmFuIHRlYW0gZm9yIG9wdGltaXppbmcgdGhlIE1hY3kncyB3ZWJzaXRlIGZvciBtb2JpbGUvdGFibGV0IGRldmljZXMuIFwiXG4gICAgICAgIClcbiAgICAgIF0pXG4gICAgXSlcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTAhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BYm91dE1lLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0wIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQWJvdXRNZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGU+XG4gICAgPGRpdiBpZD1cImFib3V0XCI+XG4gICAgICAgIDxuYXZCYXIvPlxuICAgICAgICA8aW1nIGlkPVwiYWJvdXRJbWdcIiBkYXRhLXNyYz1cIi4uL2Fzc2V0cy9oZXJhbGRzcXVhcmUuanBnXCIgYWx0PVwiaGVyYWxkc3F1YXJlXCI+XG4gICAgICAgIFxuICAgICAgICAgPHNwYW4gY2xhc3M9XCJiaW9cIj5cbiAgICAgICAgICAgIDxwPkNvbnRhY3Qg4oCiIEVNQUlMIDogamVzc2ljYS5jb3Npb0BpY2xvdWQuY29tIOKAoiBNT0JJTEUgOiAoODA1KSA4NjUtNjE0OCBcbiAgICAgICAgICAgIDxwPkVEVUNBVElPTiDigKIgQ0FMSUZPUk5JQSBQT0xZVEVDSE5JQyBTVEFURSBVTklWRVJTSVRZIFNBTiBMVUlTIE9CSVNQTywgQ0EgQi5TLiBTb2Z0d2FyZSBFbmdpbmVlcmluZzwvcD5cbiAgICAgICAgICAgIDxwPkVYUEVSSUVOQ0XigKIgTUFDWeKAmVMgSU5DLiBTb2Z0d2FyZSBFbmdpbmVlcjwvcD5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgIFdpbnRlciAyMDE1XG5TQU4gRlJBTkNJU0NPLCBDQVxuQXVnIDIwMTUgLSBQcmVzZW50XG5vIEZ1bGwgc3RhY2sgd2ViIGRldmVsb3BtZW50IOKAkyBKYXZhc2NyaXB0LCBOb2RlLCBCYWNrYm9uZSwgSFRNTCwgQ1NTL1NDU1MsIHJlc3BvbnNpdmUsIEFuZ3VsYXIsIEphdmEsIEpib3NzLCBNYXZlblxubyBBL0IgdGVzdGluZyBhbmQgS1BJIHRyYWNraW5nIHRocm91Z2ggd2ViIGFuYWx5dGljcyBpbXBsZW1lbnRhdGlvbnNcbm8gQW5hbHl0aWNzIHVzaW5nIElCTSBjb3JlbWV0cmljc1xubyBIaWdoIHByaW9yaXR5L3VyZ2VudCBjb2RlIGRlbGl2ZXJ5IGFuZCBkZWZlY3QgZml4ZXNcbm8gVW5pdCB0ZXN0IGNvdmVyYWdlIGFuZCBwZXJmb3JtYW5jZSB0ZXN0IGJhc2UgbGluaW5nIGJlaGluZCBkZWxpdmVyZWQgZmVhdHVyZXMgbyBTdHJvbmcgZW1waGFzaXMgb24gcHJvY2VzcyBhbmQgZGVsaXZlcnktIGVzcGVjaWFsbHkgdXNpbmcgbGVhbiBwcmluY2lwbGVzXG5vIFdlYiBhcHAgbWFya2V0aW5nIHJlc2VhcmNoIC0gZW1waGFzaXMgb24gcHJpdmFjeSBhbmQgVVggaW1wbGljYXRpb25zIG8gRGFpbHkgZG9jdW1lbnRhdGlvbiBvZiB3b3JrIGFzIGEgc3RlYWR5IGhhYml0XG5vIFdlZWtseSBzaG93Y2FzZSBvZiB3b3JrIHRvIGJ1c2luZXNzIHN0YWtlaG9sZGVyc1xuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPHA+VGVjaCBTdGFyIEV4ZWN1dGl2ZSBEZXZlbG9wbWVudCBQcm9ncmFtIEF1ZyAyMDE1IOKAkyBKYW4gMjAxNlxubyBCYWxhbmNlZCBwbGF0Zm9ybSBkZXZlbG9wbWVudCB3aXRoIGh1bWFuIHJlc291cmNlcyBtYW5hZ2VkIHRyYWluaW5nIHNlc3Npb25zXG5vIERlbGl2ZXJlZCBtb250aGx5IHNob3djYXNlIHRvIHByb2dyYW0gc3Rha2Vob2xkZXJzLCBtYW5hZ2VycywgYW5kIGNvbGxlYWd1ZXNcbm8gTW9iaWxlIFBsYXRmb3JtIGFuZCBDb250ZW50IEVuZ2luZWVyaW5nLSBjcmVhdGlvbiBvZiBjb21tb24gY29tcG9uZW50cyBmb3Igd2ViIGRldmVsb3BlcnMsIGV4ZWN1dGVkIGxpYnJhcnkgdXBkYXRlczwvcD5cblxuXG48cD7igKIgQVVUT0xJViDigJMgTklHSFQgVklTSU9OIEdvbGV0YSwgQ0FcblNvZnR3YXJlIEludGVybiBKdW5lIDIwMTUtQXVnIDIwMTVcbm8gSW5zdXJlZCB2YWxpZGl0eSBvZiBnYWluIGNhbGlicmF0aW9uIHRlc3Rpbmcgc29mdHdhcmUgdXNlZCBmb3IgbmlnaHQgdmlzaW9uIGNhbWVyYXMgbyBDcmVhdGVkIHRlc3QgZG9jdW1lbnRhdGlvbiBmb3IgdmVyaWZpY2F0aW9uIG9mIGNhbGlicmF0aW9uIHNvZnR3YXJlXG5vIERldmVsb3BlZCBzbWFsbCBzY3JpcHQgZm9yIG9uZSBvZmYgbmVlZCBmcm9tIEVFIGxhYlxuUFJPSkVDVFNcbuKAoiBNQUNZ4oCZUyBWT0lDRSBMQUI6IFJlc2VhcmNoZWQgYW5kIGRldmVsb3BlZCB2b2ljZSBhcHBsaWNhdGlvbnMgZm9yIEdvb2dsZSBIb21lIGFuZCBBbGV4YSBwbGF0Zm9ybXMgdXRpbGl6aW5nIEdvb2dsZSBDbG91ZCBhbmQgQVdTIExhbWJkYS4gQXNzaXN0ZWQgd2l0aCBhcmNoaXRlY3RpbmcgYSBzaW5nbGUgY29kZWJhc2UgYW5kIGNyZWF0aW5nIG1vZHVsZSBjb21wb25lbnRzLlxu4oCiIFNIT1BQQUJMRSBDT05URU5UIExFQU4gTEFCIDogUmVzcG9uc2libGUgZm9yIHJ1bm5pbmcgZXhwZXJpbWVudHMgYW5kIHN0dWR5aW5nIGJlaGF2aW9yIG9mIE1hY3nigJlzIGN1c3RvbWVycyBvbiB0aGUgcmVzcG9uc2l2ZSB3ZWJzaXRlIHRvIGdhaW4gaW5zaWdodCBvbiBwcm9kdWNpbmdcbnZhbHVhYmxlIGNvbnRlbnQgcmVjb21tZW5kYXRpb25zLlxu4oCiIE1PQklMRSBXRUIgSU5OT1ZBVElPTiBMRUFOIExBQiA6IFJlc3BvbnNpYmxlIGZvciBydW5uaW5nIGZyb250LWVuZCBleHBlcmltZW50cyBhbmQgc3R1ZHlpbmcgdGhlIGJlaGF2aW9yIG9mIG91ciBtb2JpbGUgd2ViIGN1c3RvbWVycyB0byBnYWluIGluc2lnaHQgaW50byBwcm92aWRpbmcgYW4gZW5oYW5jZWQgbW9iaWxlIHNob3BwaW5nIGV4cGVyaWVuY2UuIFV0aWxpemVkIEEvQiB0ZXN0aW5nIHRlY2huaXF1ZXMgYW5kIHdvcmtlZCB1bmRlciBwcmluY2lwbGVzIG9mIEZhc3QsIENsZWFuLCBhbmQgTW9kZXJuLlxu4oCiIEdPT0dMRSBBTVAgSEFDS0FUSE9OLCBOWUMgMjAxODogTWFjeeKAmXMgaG9tZXBhZ2Ugd3JpdHRlbiBpbiBBTVAuXG7igKIgTUFDWeKAmVMgSEFDS0FUSE9OIFRPUCA1IENPTlRFU1RBTlQsIDIwMTc6IFRodW1icyB1cCEgaW1wbGVtZW50ZWQgYSB0YXAgYW5kIHpvb20gY2FwYWJpbGl0eSBvbiB0aGUgbW9iaWxlIHdlYnNpdGXigJlzIGJyb3dzZSBhbmQgc2VhcmNoIHBhZ2VzIGZvciB2aWV3aW5nIGEgaGlnaCByZXNvbHV0aW9uIGltYWdlXG5vZiB0aGUgcHJvZHVjdC5cbuKAoiBNQUNZ4oCZUyBJREVBIExBQiwgTUVO4oCZIFMgV0VBUkhPVVNFIE9OTElORSBUVVhFRE8gUkVOVEFMIFBST0pFQ1Q6IEFzc2lzdGVkIGluIHRoZSDigJxjcmF3bOKAnSBwaGFzZSBvZiBhIG5ldyBwYXJ0bmVyc2hpcCB3aXRoIE1lbuKAmXMgV2VhcmhvdXNlIHRoYXQgd291bGQgZWFzZSB0aGUgcmVudGFsIHByb2Nlc3MgZm9yIGdyb3VwcyBpbmNsdWRpbmcgdGhlIHByb2Nlc3MgZm9yIHNpemluZyBhbmQgb3JkZXJpbmcuXG7igKIgTU9CSUxFIFdFQiBQTEFURk9STSA6IERldmVsb3BlZCBjb2RlIGFuZCB0b29rIG93bmVyc2hpcCBhbG9uZ3NpZGUgYSB2ZXRlcmFuIHRlYW0gZm9yIG9wdGltaXppbmcgdGhlIE1hY3kncyB3ZWJzaXRlIGZvciBtb2JpbGUvdGFibGV0IGRldmljZXMuIDwvcD5cbiAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgbmF2QmFyIGZyb20gXCIuLi9jb21wb25lbnRzL25hdkJhci52dWVcIjtcbi8vIGltcG9ydCB3ZWxjb21lQ2FyZCBmcm9tIFwiLi4vYWJvdXQvY2FyZHMvd2VsY29tZUNhcmQudnVlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiBcIkFib3V0TWVcIixcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIG5hdkJhcixcbiAgICAgICAgLy8gd2VsY29tZUNhcmRcbiAgICB9LFxuICAgIG1vdW50ZWQoKSB7XG4gICAgICAgIGNvbnN0IGltZyA9ICBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJoZXJhbGRzcXVhcmVcIiAqLyBcIi4uL2Fzc2V0cy9oZXJhbGRzcXVhcmUuanBnXCIpO1xuICAgICAgICBpbWcudGhlbigoZGF0YSk9PntcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGVmYXVsdCk7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFib3V0SW1nXCIpLnNyYyA9IGRhdGEuZGVmYXVsdDtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBcbiAgICB9XG59XG48L3NjcmlwdD5cblxuPHN0eWxlIHNjb3BlZD5cblxuLmJpbyB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1mYW1pbHk6ICdUcmVidWNoZXQgTVMnLCAnTHVjaWRhIFNhbnMgVW5pY29kZScsICdMdWNpZGEgR3JhbmRlJywgJ0x1Y2lkYSBTYW5zJywgQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5pbWcge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXgtaGVpZ2h0OiAyNTBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cbiNhYm91dCAvZGVlcC8gYSB7XG4gICBjb2xvcjogYmxhY2s7XG59XG5cbjwvc3R5bGU+IiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9BYm91dE1lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1iMzkyYzY0YyZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9BYm91dE1lLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vQWJvdXRNZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vQWJvdXRNZS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1iMzkyYzY0YyZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiYjM5MmM2NGNcIixcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCIvVXNlcnMvamVzcy9EZXNrdG9wL3Byb2plY3RzL3dlYi9qZXNzY29zaW8uaW8vamVzc2Nvc2lvLmdpdGh1Yi5pby9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdiMzkyYzY0YycpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdiMzkyYzY0YycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdiMzkyYzY0YycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vQWJvdXRNZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YjM5MmM2NGMmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignYjM5MmM2NGMnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9hYm91dC9BYm91dE1lLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=